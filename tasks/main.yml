---
 - name: Install common dependencies (yum)
   yum: state=installed name={{ item }}
   with_items:
    - ruby-devel
    - ImageMagick-devel
    - make
    - gcc
    - patch
   when: ansible_os_family == "RedHat"

 # note the mariadb dev package is missing mysql_config, use mysql one instaead
 - name: Install common dependencies (apt)
   apt: state=installed name={{ item }}
   with_items:
    - ruby-dev
    - rubygems
    - imagemagick
    - make
    - gcc
    - patch
   when: ansible_os_family == "Debian"

 - name: Install common dependencies (portage)
   portage: state=installed name={{ item }}
   with_items:
    - dev-lang/ruby
    - media-gfx/imagemagick
   when: ansible_os_family == "Gentoo"

 - include: db/{{ sql_database_type }}.yml

 - name: Create topdir parent directory
   file: path={{ redmine_topdir | dirname }} state=directory recurse=yes

 - name: Create the Redmine user
   user: name=redmine system=yes home={{ redmine_topdir }}

 - name: Check if Redmine app directory already exists
   stat: path={{ redmine_appdir }}
   register: redmine_install_dest

 - name: Download Redmine
   get_url:
     url=http://www.redmine.org/releases/redmine-{{ redmine_version }}.tar.gz
     dest={{ redmine_topdir }}
   become: yes
   become_user: redmine
   when: redmine_install_dest.stat.exists == False

 - name: Unpack Redmine source tarball
   unarchive:
     src={{ redmine_topdir }}/redmine-{{ redmine_version }}.tar.gz
     dest={{ redmine_topdir }}
     copy=no
   become: yes
   become_user: redmine
   when: redmine_install_dest.stat.exists == False

 - name: Create appdir parent directory
   file: path={{ redmine_appdir | dirname }} state=directory recurse=yes

 - name: Install unpacked Redmine to separate app directory
   command: mv {{ redmine_topdir }}/redmine-{{ redmine_version }} {{ redmine_appdir }}
   when: redmine_topdir + "/redmine-" + redmine_version != redmine_appdir

 - name: Upload the Redmine configuration file
   template: src=db/database-{{ sql_database_type }}.yml.j2 dest={{ redmine_appdir }}/config/database.yml
   become: yes
   become_user: redmine

 - name: Set install dir for bundler executable
   template: src=gemrc.j2 dest={{ redmine_topdir }}/.gemrc
   become: yes
   become_user: redmine

 - name: Install bundler via gem
   shell: gem install --user bundler
   become: yes
   become_user: redmine

   # Bundler module is available in Ansible 2.0
 - name: Install the required gems via bundler
   shell: "{{ redmine_topdir }}/bin/bundler install --path vendor/bundler --without development test rmagick"
   become: yes
   become_user: redmine
   args:
     chdir: "{{ redmine_appdir }}"
 
 - name: Generate secret token
   shell: "{{ redmine_topdir }}/bin/bundle exec rake generate_secret_token"
   become: yes
   become_user: redmine
   args:
     chdir: "{{ redmine_appdir }}"

 - name: DB Migrate
   shell: RAILS_ENV=production {{ redmine_topdir }}/bin/bundle  exec rake db:migrate
   become: yes
   become_user: redmine
   args:
     chdir: "{{ redmine_appdir }}"
 
 - name: Default data
   shell: RAILS_ENV=production REDMINE_LANG=en {{ redmine_topdir }}/bin/bundle exec rake redmine:load_default_data
   args:
     chdir: "{{ redmine_appdir }}"
   become: yes
   become_user: redmine

 - name: temp dir
   file: path={{ redmine_appdir }}/{{ item }} state=directory
     owner=redmine
     group=redmine
     mode=0755
   with_items:
   - "tmp/pdf"
   - "public/plugin_assets"
   - "files"
   - "log"

 - name: Get ruby gem install path for use in web integration
   command: ruby -e 'print Gem.user_dir'
   register: gem_dir
   become: yes
   become_user: redmine

 - name: Get ruby bundler install path for use in web integration
   command: ruby -e 'require "bundler" ; print Bundler.bundle_path'
   args:
     chdir: "{{ redmine_appdir }}"
   register: bundler_dir
   become: yes
   become_user: redmine

 - name: Create staticdir directory for static file serving
   file: path={{ redmine_staticdir }} state=directory recurse=yes

 - name: Make copy of Redmine files for static file serving (eliminate symlinks)
   shell: rsync -r --copy-links {{redmine_appdir}}/public {{redmine_staticdir}}

 - include: web/{{ app_server_type }}-{{ web_server_type }}.yml

 - include: firewall.yml

 ## run webrick webserver for testing
 # bundle exec rails server webrick -e production
 ## login
 # admin/admin
