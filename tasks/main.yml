---
 - name: Install the required dependencies (yum)
   yum: state=installed name={{ item }}
   with_items:
    - mariadb-server
    - ruby-devel
    - ImageMagick-devel
    - make
    - gcc
    - patch
    - mariadb-devel
    - MySQL-python
   when: ansible_os_family == "RedHat"

 # note the mariadb dev package is missing mysql_config, use mysql one instaead
 - name: Install the required dependencies (apt)
   apt: state=installed name={{ item }}
   with_items:
    - mariadb-server
    - ruby-dev
    - rubygems
    - imagemagick
    - make
    - gcc
    - patch
    - libmysqlclient-dev
    - python-mysqldb
   when: ansible_os_family == "Debian"

 - name: Install the required dependencies (portage)
   portage: state=installed name={{ item }}
   with_items:
    - dev-db/mariadb
    - dev-lang/ruby
    - media-gfx/imagemagick
    - dev-python/mysql-python
   when: ansible_os_family == "Gentoo"

 - name: Enable MariaDB server (try real name)
   service: name=mariadb state=started enabled=yes
   register: db_started
   ignore_errors: True

 # some distros call service "mysql" since MariaDB is drop-in replacement
 - name: Enable MariaDB server (try 'mysql' as name)
   service: name=mysql state=started enabled=yes
   when: db_started|failed

 - name: Create redmine DB
   mysql_db:
     name={{ sql_database_name }} state=present

 - name: Create redmine DB user
   mysql_user:
     name={{ sql_username}}
     password={{ sql_password }}
     host={{ sql_database_host }}
     priv={{ sql_database_name }}.*:ALL
     state=present

 - name: Create the Redmine user
   user: name=redmine

 - name: Check redmine catalog
   stat: path={{ redmine_home }}
   register: redmine_cat

 - name: Download Redmine
   get_url:
     url=http://www.redmine.org/releases/redmine-{{ redmine_version }}.tar.gz
     dest=/home/redmine/
   become: yes
   become_user: redmine
   when: redmine_cat.stat.exists == False

 - name: Unpack Redmine source tarball
   unarchive:
     src=/home/redmine/redmine-{{ redmine_version }}.tar.gz
     dest=/home/redmine/
     copy=no
   become: yes
   become_user: redmine
   when: redmine_cat.stat.exists == False

 - name: Upload the Redmine configuration file
   template: src=database.yml.j2 dest={{ redmine_home }}/config/database.yml
   become: yes
   become_user: redmine

 - name: Install the required gems - bundler
   gem: name=bundler state=present user_install=yes
   become: yes
   become_user: redmine

 - name: Install bundler via gem
   shell: /bin/gem install bundler
   become: yes
   become_user: redmine
   args:
     chdir: /home/redmine/

   # Bundler is available in Ansible 2.0
 - name: Install the required gems via bundler
   become: yes
   become_user: redmine
   shell: /home/redmine/bin/bundler install --without development test rmagick
   args:
     chdir: "{{ redmine_home }}"
 
 - name: Generate secret token
   become: yes
   become_user: redmine
   shell: /home/redmine/bin/bundle exec /home/redmine/bin/rake generate_secret_token
   args:
     chdir: "{{ redmine_home }}"

 - name: DB Migrate
   shell: RAILS_ENV=production /home/redmine/bin/bundle  exec /home/redmine/bin/rake db:migrate
   become: yes
   become_user: redmine
   args:
     chdir: "{{ redmine_home }}"
 
 - name: Default data
   shell: RAILS_ENV=production REDMINE_LANG=en /home/redmine/bin/bundle exec /home/redmine/bin/rake redmine:load_default_data
   become: yes
   become_user: redmine
   args:
     chdir: "{{ redmine_home }}"

 - name: temp dir
   file: path={{ redmine_home }}/{{ item }} state=directory
     owner=redmine
     group=redmine
     mode=0755
   with_items:
   - "tmp/pdf"
   - "public/plugin_assets"
   - "files"
   - "log"

 - name: Open http port
   firewalld: port={{ http_port }}/tcp permanent=true state=enabled
   notify:
   - Firewalld reload

   # bundle exec rails server webrick -e production
   # admin/admin



